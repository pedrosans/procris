#!/usr/bin/env python3
"""
Copyright 2017 Pedro Santos <pedrosans@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""

import argparse

parser = argparse.ArgumentParser()
commands_parser = parser.add_subparsers(help='pwm sub-commands help', dest='action')
commands_parser.add_parser('start',	 help='Start pwm service')
commands_parser.add_parser('stop',	 help='Stop the running pwm service if any')
commands_parser.add_parser('status', help='Show the status of pwm service')
parser.add_argument('-c', required=False)

args = parser.parse_args()

if args.action == 'start':
	import pwm.service
	pwm.service.load()
	pwm.service.start()
elif args.action == 'stop':
	import pwm.remote as remote
	proxy = remote.get_proxy()
	if proxy:
		proxy.stop_running_instance()
		print("Remote instance were stopped")
	else:
		print("pwm is not running")
elif args.action == 'status':
	import pwm.remote as remote
	proxy = remote.get_proxy()
	if proxy:
		print("Active, pid: " + proxy.get_running_instance_id())
	else:
		print("Inactive")
elif args.c:
	import pwm.service
	import pwm.wm as wm
	import pwm.names as names
	pwm.service.load()
	c_in = wm.UserEvent(text=args.c)
	function = names.match(c_in).function
	pwm.service.call(function, c_in)
	pwm.service.messages.print_to_console()
else:
	parser.print_help()
